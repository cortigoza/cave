// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int    @id @default(autoincrement())
  nombre    String
  contrasena  String
  fecha_creacion String
  ultima_modificacion String
  cliente Cliente[]
  barberia Barberia[]
  encuesta Encuesta[]
  cita Cita[]
}

model Cliente {
  id       Int    @id @default(autoincrement())
  nombre     String
  telefono String
  direccion String
  email String
  usuario Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId Int?
}

model Barberia {
  id Int @id @default(autoincrement())
  nombre String
  about String
  description String
  direccion String
  banner String
  mosaico1 String
  barberiacol String
  mosaico2 String
  mosaico3 String
  telefono String
  usuario Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId Int
  encuesta Encuesta[]
  servicio Servicio[]
  cita Cita[]
  horario Horario[]
}

model Encuesta {
  id Int @id @default(autoincrement())
  puntuacion String
  comentarios String
  usuario Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId Int?
  barberia Barberia? @relation(fields: [barberiaId], references: [id])
  barberiaId Int?
}
model Servicio {
  id Int @id @default(autoincrement())
  nombre String
  image String
  precio Decimal
  barberia Barberia? @relation(fields: [barberiaId], references: [id])
  barberiaId Int?
  cita Cita[]
}
model Cita {
  id Int @id @default(autoincrement())
  usuario Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId Int?
  fecha DateTime
  hora DateTime
  barberia Barberia? @relation(fields: [barberiaId], references: [id])
  barberiaId Int?
  servicio Servicio? @relation(fields: [servicioId],references: [id])
  servicioId Int?
}
model Horario {
  id Int @id @default(autoincrement())
  barberia Barberia @relation(fields: [barberiaId], references: [id])
  barberiaId Int
  day String
  start String
  end String
}

// CUENTA->USUARIO (REMPLAZA CLIENTE) 
